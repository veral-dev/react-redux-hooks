{"ast":null,"code":"var _jsxFileName = \"/Users/davidvrl/Desktop/Ironhack/react-redux-material/react-redux-hooks/src/pages/MovieDetail/index.js\";\nimport React, { useEffect } from 'react';\nimport { get } from 'lodash';\nimport { Container, Typography, CircularProgress } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchMovieById } from '../../redux/actions/search';\nimport { movieResult as movieResultSelector } from '../../redux/selectors';\nexport default (({\n  match\n}) => {\n  const dispatch = useDispatch();\n  const movieResult = useSelector(state => movieResultSelector(state));\n  useEffect(() => {\n    const movieId = get(match, 'params.movieId');\n\n    if (!movieResult || movieResult && movieResult.imdbID !== movieId) {\n      dispatch(searchMovieById({\n        movieId\n      }));\n    }\n  });\n\n  if (!movieResult) {\n    return /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 50,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, movieResult.Title), /*#__PURE__*/React.createElement(\"img\", {\n    src: movieResult.Poster,\n    alt: movieResult.Title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"Actores: \"), \" \", movieResult.Actors), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \"Director: \"), \" \", movieResult.Director), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Pais: \"), \" \", movieResult.Country), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"Clasificacion: \"), \" \", movieResult.Rated), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Premios: \"), \" \", movieResult.Awards), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Sinopsis: \"), \" \", movieResult.Plot));\n});","map":{"version":3,"sources":["/Users/davidvrl/Desktop/Ironhack/react-redux-material/react-redux-hooks/src/pages/MovieDetail/index.js"],"names":["React","useEffect","get","Container","Typography","CircularProgress","useDispatch","useSelector","searchMovieById","movieResult","movieResultSelector","match","dispatch","state","movieId","imdbID","Title","Poster","Actors","Director","Country","Rated","Awards","Plot"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,gBAAhC,QAAwD,mBAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,WAAW,IAAIC,mBAAxB,QAAmD,uBAAnD;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMG,WAAW,GAAGF,WAAW,CAACM,KAAK,IAAIH,mBAAmB,CAACG,KAAD,CAA7B,CAA/B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,OAAO,GAAGZ,GAAG,CAACS,KAAD,EAAQ,gBAAR,CAAnB;;AACA,QAAI,CAACF,WAAD,IAAgBA,WAAW,IAAIA,WAAW,CAACM,MAAZ,KAAuBD,OAA1D,EAAmE;AAC/DF,MAAAA,QAAQ,CAACJ,eAAe,CAAC;AAAEM,QAAAA;AAAF,OAAD,CAAhB,CAAR;AACH;AACJ,GALQ,CAAT;;AAQA,MAAI,CAACL,WAAL,EAAkB;AACd,wBAAO,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,WAAW,CAACO,KAAtC,CADJ,eAEI;AAAK,IAAA,GAAG,EAAEP,WAAW,CAACQ,MAAtB;AAA8B,IAAA,GAAG,EAAER,WAAW,CAACO,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ,OAAwCP,WAAW,CAACS,MAApD,CAHJ,eAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ,OAAyCT,WAAW,CAACU,QAArD,CAJJ,eAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ,OAAqCV,WAAW,CAACW,OAAjD,CALJ,eAMI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAZ,OAA8CX,WAAW,CAACY,KAA1D,CANJ,eAOI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ,OAAwCZ,WAAW,CAACa,MAApD,CAPJ,eAQI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ,OAAyCb,WAAW,CAACc,IAArD,CARJ,CADJ;AAYH,CA5BD","sourcesContent":["import React, { useEffect } from 'react';\nimport { get } from 'lodash';\nimport { Container, Typography, CircularProgress } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { searchMovieById } from '../../redux/actions/search';\nimport { movieResult as movieResultSelector } from '../../redux/selectors';\n\nexport default ({ match }) => {\n    const dispatch = useDispatch();\n    const movieResult = useSelector(state => movieResultSelector(state));\n\n    useEffect(() => {\n        const movieId = get(match, 'params.movieId');\n        if (!movieResult || movieResult && movieResult.imdbID !== movieId) {\n            dispatch(searchMovieById({ movieId }));\n        }\n    });\n\n\n    if (!movieResult) {\n        return <CircularProgress size={50} color=\"primary\" />;\n    }\n\n    return (\n        <Container>\n            <Typography variant=\"h3\">{movieResult.Title}</Typography>\n            <img src={movieResult.Poster} alt={movieResult.Title} />\n            <Typography><strong>Actores: </strong> {movieResult.Actors}</Typography>\n            <Typography><strong>Director: </strong> {movieResult.Director}</Typography>\n            <Typography><strong>Pais: </strong> {movieResult.Country}</Typography>\n            <Typography><strong>Clasificacion: </strong> {movieResult.Rated}</Typography>\n            <Typography><strong>Premios: </strong> {movieResult.Awards}</Typography>\n            <Typography><strong>Sinopsis: </strong> {movieResult.Plot}</Typography>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}