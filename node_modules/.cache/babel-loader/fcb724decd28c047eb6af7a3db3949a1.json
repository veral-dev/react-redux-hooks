{"ast":null,"code":"import { get } from 'lodash';\nimport { SEARCH_MOVIE_START, SEARCH_MOVIE_ERROR, SEARCH_MOVIE_COMPLETE } from '../../consts/actionTypes';\nconst initialState = {};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_MOVIE_START:\n      console.log(action);\n      return { ...state,\n        isLoading: false\n      };\n\n    case SEARCH_MOVIE_ERROR:\n      console.log('Error');\n      return { ...state,\n        isLoading: false\n      };\n\n    case SEARCH_MOVIE_COMPLETE:\n      console.log('Complete');\n      return { ...state,\n        isLoading: false,\n        movieResults: action.results.data\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Users/davidvrl/Desktop/Ironhack/react-redux-material/react-redux-saga-router-skeleton/src/redux/reducers/search.js"],"names":["get","SEARCH_MOVIE_START","SEARCH_MOVIE_ERROR","SEARCH_MOVIE_COMPLETE","initialState","state","action","type","console","log","isLoading","movieResults","results","data"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,qBAAjD,QAA8E,0BAA9E;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,UAAUC,KAAK,GAAGD,YAAlB,EAAgCE,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,kBAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAO,EAAE,GAAGD,KAAL;AAAYK,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKR,kBAAL;AACIM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYK,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKP,qBAAL;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYK,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,YAAY,EAAEL,MAAM,CAACM,OAAP,CAAeC;AAA3D,OAAP;;AACJ;AACI,aAAO,EAAE,GAAGR;AAAL,OAAP;AAXR;AAaH","sourcesContent":["import { get } from 'lodash'\nimport { SEARCH_MOVIE_START, SEARCH_MOVIE_ERROR, SEARCH_MOVIE_COMPLETE } from '../../consts/actionTypes'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SEARCH_MOVIE_START:\n            console.log(action)\n            return { ...state, isLoading: false };\n        case SEARCH_MOVIE_ERROR:\n            console.log('Error')\n            return { ...state, isLoading: false };\n        case SEARCH_MOVIE_COMPLETE:\n            console.log('Complete')\n            return { ...state, isLoading: false, movieResults: action.results.data };\n        default:\n            return { ...state };\n    }\n}"]},"metadata":{},"sourceType":"module"}